Scripts to run Free Range Routing's OSPF on profile sripv6-ovs in PhantomNet (https://www.cloudlab.us/show-profile.php?uuid=616d4cca-7df2-11e7-91c5-90e2ba22fee4)
------------------------------------------------------------------------------------

NOTE: run all of the following scripts on node 1 of your experiment.

Fetching code:
--------------
1. Fetch scripts: https://gitlab.flux.utah.edu/binh/sripv6-linux
2. Fetch OVS code: https://gitlab.flux.utah.edu/binh/ovs-srv6
	+ Node 1: Copy the sdn code to /opt/openvswitch: sudo cp -r ~/ovs-srv6/sdn_controller /opt/openvswitch/

A. Infrastructure - Configure nodes and OSPF routers:
-----------------------------------
1. Obtain interfaces information by: cd ~/sripv6-linux/frr-ovs-new; ./get_all_info.sh. Result is in net_info.sh. Copy net_info.sh to /opt/ folder.
2. Add global IPv6 addresses to interfaces: cd ~/sripv6-linux/frr-ovs-new; ./add_global_ipv6.sh
3. Create and install configuration files for FRR's Zebra and OSPF6. The configuration is copied to /usr/local/etc/ on each node after running the command:
	./create_all_zebra_conf.sh
	./create_all_ospf_conf.sh
6. Install default routes on the end hosts: node0 and node6
	./install_default_route_on_hosts.sh
7. Enable SR on core routers:
	./enable_sr_flags.sh


B. Run OVS with SR:
-------------------
   + Automatically:
	1. ./start_all_ovs.sh
   + Manually:
	1. Install ovs's kernel module: cd /opt/openvswitch; sudo ./re_compile.sh
	2. Run OVS: cd /opt/openvswitch; sudo ./run_ovs.sh
	3. Create ports for OVS: cd /opt/openvswitch; sudo ./run_srv6.sh <inport network (facing endhost)> <outport network (facing CR)> <controller's IP (node1's public IP)>
		eg, node5: sudo ./run_srv6.sh net2 nete 155.98.39.139; 
		    node1: sudo ./run_srv6.sh net1 neta 155.98.39.145
	4. Show the ports of OVS by: cd /opt/openvswitch; sudo ./ovs_port_desc.sh
	5. The OVS will try to connect to the Ryu's SDN controller at node1.

C. Start OSPF monitors:
-------------------------------
	1. Start OSPF monitors:
		cd ~/sripv6-linux/ospf_monitor; ./start_all_ospf_monitor.sh

D. Start Ryu SDN controller and OSPF routers:
--------------------------------------------
	1. Copy net_info.sh to /opt: sudo cp net_info.sh /opt/
	2. IT IS NEEDED that the SDN controller runs *after* the OSPF deamons in step C2. Thus, to run the SDN controller:
		+ Kill OSPF deamons (if they are running): cd ~/sripv6-linux/frr-ovs-new; ./kill_all_frr.sh
		+ Start SDN controller: cd /opt/openvswitch/sdn_controller/; ryu-manager sr_controller_test.py
            You should see the SDN controller prints something like this *before* moving on: 
                "
                Deleting all flow entries in table 0 of OVS 127.0.0.1
                Pushing bridging flows for all other IPV6 packets on OVS: 127.0.0.1
                New OVS connected: 2, still waiting for 1 OVS to join ...
                Deleting all flow entries in table 0 of OVS 155.98.39.75
                Pushing bridging flows for all other IPV6 packets on OVS: 155.98.39.75
                New OVS connected: 3, still waiting for 0 OVS to join ...
                Init SR_rest_api
                Datapath objects:
                {2: <ryu.controller.controller.Datapath object at 0x2cf4a50>, 3: <ryu.controller.controller.Datapath object at 0x2cfd550>}
                Northbound REST started!
                "
		+ Start OSPF deamons: cd ~/sripv6-linux/frr-ovs-new; ./start_all_frr.sh
	        After several seconds, the routes are computed by OSPF routers. You could see the routes on node 2,3,4 by logging in a node and using:
		            ip -6 route
	3. The OSPF monitors will send OSPF LSAs to the SDN controller. The SDN controller will print out the OSPF routers topology that it generates from the LSAs. The controller also hsow REST-API requests that it received, eg, install a segment path.
	
E. Test connectivity:
--------------------
	After the controller installs the rules, node0 should be able to ping node6's net2
		ping6 <node6's net2 IP>

F. Run and access the Segment Routing web portal:
------------------------------------------------
	0. Install Apache web server: 
		sudo apt-get update; sudo apt-get install -y apache2
	1. Copy web portal code to /var/www folder: (see also https://gitlab.flux.utah.edu/binh/ovs-srv6)
		+ Replace SDN controller name: cd ~/ovs-srv6/sdn_controller/www/; ./replace_sdn_controller_name.sh <node1 name>
		+ Copy the folder ~/ovs-srv6/sdn_controller/www to /var/: sudo cp -r ~/ovs-srv6/sdn_controller/www /var/
	2. Access the web portal using this url:
		http://<node1 name>/web-portal/
	3. The web portal should show a topology of your OSPF routers. You can also implement a path using the portal.
    4. If you click on a node, you'll see the network information that the web portal fetches from the SDN controller.
	4. PING test:
		+ From node 0, ping node 6:
			ping6 <node6's net2 IP address>
			By default, there is a shortest path between node 0 and 6, implemented by OSPF. So the PING packets should go through this path.
		+ In the web portal, enter your desired path from node 2 (the router with the subnet that node 0 is in) to node 3 (the router with the subnet that node 6 is in), then click 'submit'. You'll see the PING packets going through a new path.


Other scripts:
--------------
1. kill_frr.sh: kill zebra and ospf deamons on a OSPF router.
2. start_frr.sh: start zebra and ospf deamons on a OSPF router.
3. zebra/ospf.log: log files of zebra and ospf.
4. other scripts are irrelevant, park here now for later use.
